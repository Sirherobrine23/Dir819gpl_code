	.section .mdebug.abi32
	.previous
	.abicalls
	.section	.debug_abbrev,"",@progbits
$Ldebug_abbrev0:
	.section	.debug_info,"",@progbits
$Ldebug_info0:
	.section	.debug_line,"",@progbits
$Ldebug_line0:
	.text
$Ltext0:
	.section	.rodata.str1.4,"aMS",@progbits,1
	.align	2
$LC0:
	.ascii	"AT26DF161\000"
	.align	2
$LC1:
	.ascii	"AT26DF161A\000"
	.align	2
$LC2:
	.ascii	"A25L016\000"
	.align	2
$LC3:
	.ascii	"EN25P16\000"
	.align	2
$LC4:
	.ascii	"EN25F16\000"
	.align	2
$LC5:
	.ascii	"MX25L1605D\000"
	.align	2
$LC6:
	.ascii	"MX25L1635D\000"
	.align	2
$LC7:
	.ascii	"M25P16\000"
	.align	2
$LC8:
	.ascii	"W25X16\000"
	.align	2
$LC9:
	.ascii	"W25Q16\000"
	.align	2
$LC10:
	.ascii	"S25FL016A\000"
	.align	2
$LC11:
	.ascii	"GD25Q16\000"
	.align	2
$LC12:
	.ascii	"AT25DF321\000"
	.align	2
$LC13:
	.ascii	"A25L032\000"
	.align	2
$LC14:
	.ascii	"EN25P32\000"
	.align	2
$LC15:
	.ascii	"EN25F32\000"
	.align	2
$LC16:
	.ascii	"EN25Q32\000"
	.align	2
$LC17:
	.ascii	"EN25Q32A\000"
	.align	2
$LC18:
	.ascii	"M25P32\000"
	.align	2
$LC19:
	.ascii	"MX25L3205D\000"
	.align	2
$LC20:
	.ascii	"MX25L3235D\000"
	.align	2
$LC21:
	.ascii	"N25S32\000"
	.align	2
$LC22:
	.ascii	"W25X32\000"
	.align	2
$LC23:
	.ascii	"W25Q32\000"
	.align	2
$LC24:
	.ascii	"S25FL032A\000"
	.align	2
$LC25:
	.ascii	"GD25Q32\000"
	.align	2
$LC26:
	.ascii	"AT25DF641\000"
	.align	2
$LC27:
	.ascii	"A25L064\000"
	.align	2
$LC28:
	.ascii	"EN25P64\000"
	.align	2
$LC29:
	.ascii	"EN25Q64\000"
	.align	2
$LC30:
	.ascii	"M25P64\000"
	.align	2
$LC31:
	.ascii	"MX25L6405D\000"
	.align	2
$LC32:
	.ascii	"W25X64\000"
	.align	2
$LC33:
	.ascii	"W25Q64\000"
	.align	2
$LC34:
	.ascii	"S25FL064A\000"
	.align	2
$LC35:
	.ascii	"GD25Q64\000"
	.align	2
$LC36:
	.ascii	"XM25QH64A\000"
	.align	2
$LC37:
	.ascii	"GD25Q128\000"
	.align	2
$LC38:
	.ascii	"AT25DF128\000"
	.align	2
$LC39:
	.ascii	"A25L128\000"
	.align	2
$LC40:
	.ascii	"EN25P128\000"
	.align	2
$LC41:
	.ascii	"EN25Q128\000"
	.align	2
$LC42:
	.ascii	"N25Q128\000"
	.align	2
$LC43:
	.ascii	"N25Q128A\000"
	.align	2
$LC44:
	.ascii	"MX25L12805\000"
	.align	2
$LC45:
	.ascii	"W25X128\000"
	.align	2
$LC46:
	.ascii	"W25Q128\000"
	.align	2
$LC47:
	.ascii	"S25FL128P\000"
	.align	2
$LC48:
	.ascii	"Unknown\000"
	.globl	flash_table
	.section	.data.rel.ro.local,"aw",@progbits
	.align	2
	.type	flash_table, @object
	.size	flash_table, 1428
flash_table:
	.word	$LC0
	.word	15681024
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	0
	.word	$LC1
	.word	15681025
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	0
	.word	$LC1
	.word	15681026
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	0
	.word	$LC2
	.word	3616789
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	0
	.word	$LC3
	.word	1847317
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	5
	.word	$LC4
	.word	1847573
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	1
	.word	$LC5
	.word	12722197
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	1
	.word	$LC6
	.word	12723221
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	1
	.word	$LC7
	.word	2105365
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	1
	.word	$LC8
	.word	15675413
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	2
	.word	$LC9
	.word	15679509
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	5
	.word	$LC10
	.word	66068
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	1
	.word	$LC11
	.word	13123605
	.word	2097152
	.word	65536
	.word	32
	.word	256
	.word	1
	.word	$LC12
	.word	2049792
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	0
	.word	$LC12
	.word	2049793
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	0
	.word	$LC13
	.word	3616790
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	0
	.word	$LC14
	.word	1843222
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	0
	.word	$LC15
	.word	1847574
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	1
	.word	$LC16
	.word	1848086
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	0
	.word	$LC17
	.word	1847318
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	5
	.word	$LC18
	.word	2105366
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	1
	.word	$LC19
	.word	12722198
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	1
	.word	$LC20
	.word	12723222
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	1
	.word	$LC21
	.word	13971478
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	0
	.word	$LC22
	.word	15675414
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	2
	.word	$LC23
	.word	15679510
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	5
	.word	$LC24
	.word	66069
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	1
	.word	$LC25
	.word	13123606
	.word	4194304
	.word	65536
	.word	64
	.word	256
	.word	1
	.word	$LC26
	.word	2050048
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	0
	.word	$LC27
	.word	3616791
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	0
	.word	$LC28
	.word	1843223
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	0
	.word	$LC29
	.word	1847319
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	5
	.word	$LC30
	.word	2105367
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	1
	.word	$LC31
	.word	12722199
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	1
	.word	$LC32
	.word	15675415
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	2
	.word	$LC33
	.word	15679511
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	5
	.word	$LC34
	.word	66070
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	1
	.word	$LC35
	.word	13123607
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	1
	.word	$LC36
	.word	2125847
	.word	8388608
	.word	65536
	.word	128
	.word	256
	.word	1
	.word	$LC37
	.word	13123608
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	1
	.word	$LC38
	.word	2050304
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	0
	.word	$LC39
	.word	3616792
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	0
	.word	$LC40
	.word	1843224
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	0
	.word	$LC41
	.word	1847320
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	5
	.word	$LC42
	.word	2144792
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	0
	.word	$LC43
	.word	2145048
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	0
	.word	$LC44
	.word	12722200
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	1
	.word	$LC45
	.word	15675416
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	2
	.word	$LC46
	.word	15679512
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	5
	.word	$LC47
	.word	73752
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	1
	.word	$LC48
	.word	0
	.word	16777216
	.word	65536
	.word	256
	.word	256
	.word	0
	.rdata
	.align	2
	.type	__func__.0, @object
	.size	__func__.0, 15
__func__.0:
	.ascii	"spic_busy_wait\000"
	.section	.rodata.str1.4
	.align	2
$LC49:
	.ascii	"NULL pointer\n\000"
	.align	2
$LC50:
	.ascii	"%s: fail \n\000"
	.text
	.align	2
	.ent	raspi_cmd
	.type	raspi_cmd, @function
raspi_cmd:
$LFB3:
	.file 1 "spi_flash.c"
	.loc 1 108 0
	.frame	$sp,32,$31		# vars= 0, regs= 1/0, args= 16, gp= 8
	.mask	0x80000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-32
$LCFI0:
	sw	$31,24($sp)
$LCFI1:
	.cprestore	16
	.loc 1 113 0
	li	$2,-1342177280			# 0xffffffffb0000000
	ori	$10,$2,0xb10
	.loc 1 108 0
	lw	$14,56($sp)
	.loc 1 113 0
	lw	$11,0($10)
	.loc 1 117 0
	sll	$6,$6,24
	.loc 1 118 0
	srl	$3,$14,3
	.loc 1 108 0
	andi	$4,$4,0x00ff
	.loc 1 114 0
	ori	$11,$11,0xa00
	.loc 1 116 0
	ori	$8,$2,0xb20
	.loc 1 117 0
	ori	$9,$2,0xb3c
	.loc 1 118 0
	andi	$3,$3,0x1
	.loc 1 108 0
	lw	$12,48($sp)
	ori	$13,$2,0xb24
	.loc 1 115 0
	sw	$11,0($10)
	.loc 1 116 0
	sw	$4,0($8)
	.loc 1 117 0
	sw	$6,0($9)
	.loc 1 110 0
	.loc 1 118 0
	beq	$3,$0,$L2
	move	$6,$0

	.loc 1 119 0
	sw	$5,0($13)
	.loc 1 123 0
	.loc 1 119 0
	b	$L51
	li	$4,-1342177280			# 0xffffffffb0000000

$L2:
	.loc 1 121 0
	sll	$2,$5,8
	sw	$2,0($13)
	.loc 1 123 0
	li	$4,-1342177280			# 0xffffffffb0000000
$L51:
	.loc 1 124 0
	srl	$3,$14,2
	.loc 1 123 0
	ori	$2,$4,0xb28
	.loc 1 124 0
	andi	$3,$3,0x1
	.loc 1 123 0
	sw	$12,0($2)
	.loc 1 124 0
	beq	$3,$0,$L4
	ori	$4,$4,0xb2c

	.loc 1 125 0
	lw	$2,52($sp)
	sw	$2,0($4)
	.loc 1 129 0
	.loc 1 125 0
	b	$L52
	li	$4,-1342177280			# 0xffffffffb0000000

$L4:
	.loc 1 127 0
	sw	$0,0($4)
	.loc 1 129 0
	li	$4,-1342177280			# 0xffffffffb0000000
$L52:
	ori	$3,$4,0xb14
	li	$10,16			# 0x10
	.loc 1 130 0
	andi	$2,$14,0x1
	.loc 1 129 0
	sw	$10,0($3)
	.loc 1 130 0
	beq	$2,$0,$L6
	nop

	.loc 1 131 0
	beq	$7,$0,$L49
	nop

	.loc 1 135 0
	blez	$12,$L18
	move	$6,$0

	ori	$8,$4,0xb38
	li	$5,-1342177280			# 0xffffffffb0000000
$L50:
	.loc 1 137 0
	lw	$2,0($8)
	andi	$11,$2,0xff
	.loc 1 138 0
	beq	$11,$0,$L50
	ori	$4,$5,0xb34

	.loc 1 139 0
	move	$10,$11
$L16:
	.loc 1 140 0
	lw	$3,0($4)
	addu	$2,$6,$7
	.loc 1 139 0
	addiu	$10,$10,-1
	.loc 1 140 0
	sb	$3,0($2)
	.loc 1 139 0
	bne	$10,$0,$L16
	addiu	$6,$6,1

	.loc 1 135 0
	slt	$2,$6,$12
	bne	$2,$0,$L50
	lw	$2,%got(mips_bus_feq)($28)

	.loc 1 97 0
	.loc 1 135 0
	b	$L56
	li	$4,8000			# 0x1f40

$L6:
	.loc 1 143 0
	srl	$2,$14,1
	andi	$2,$2,0x1
	.loc 1 97 0
	.loc 1 143 0
	beq	$2,$0,$L53
	lw	$2,%got(mips_bus_feq)($28)

	.loc 1 148 0
	.loc 1 144 0
	bne	$7,$0,$L20
	slt	$2,$10,$12

$L49:
	.loc 1 145 0
	lw	$4,%got($LC49)($28)
	lw	$25,%call16(printf)($28)
	jalr	$25
	addiu	$4,$4,%lo($LC49)

	lw	$28,16($sp)
	.loc 1 146 0
	b	$L1
	li	$5,-1			# 0xffffffffffffffff

$L20:
$LBB2:
	.loc 1 148 0
	movz	$10,$12,$2
$LBE2:
	.loc 1 149 0
	blez	$12,$L18
	move	$6,$0

	ori	$13,$4,0xb38
	li	$9,-1			# 0xffffffffffffffff
	li	$8,16			# 0x10
	li	$5,-1342177280			# 0xffffffffb0000000
$L31:
	.loc 1 151 0
	addiu	$10,$10,-1
	beq	$10,$9,$L27
	addu	$2,$6,$7

	ori	$4,$5,0xb30
	li	$3,-1			# 0xffffffffffffffff
$L54:
	lbu	$2,0($2)
	addiu	$10,$10,-1
	addiu	$6,$6,1
	sw	$2,0($4)
	bne	$10,$3,$L54
	addu	$2,$6,$7

$L27:
	.loc 1 154 0
	lw	$2,0($13)
	andi	$2,$2,0xff00
	srl	$11,$2,8
	.loc 1 155 0
	sltu	$2,$11,16
	beq	$2,$0,$L27
	nop

	.loc 1 156 0
	subu	$10,$8,$11
	.loc 1 157 0
	addu	$2,$6,$10
	sltu	$2,$12,$2
	.loc 1 158 0
	subu	$3,$12,$6
	.loc 1 149 0
	slt	$4,$6,$12
	.loc 1 158 0
	.loc 1 149 0
	bne	$4,$0,$L31
	movn	$10,$3,$2

$L18:
$LBB3:
$LBB4:
	.loc 1 97 0
	lw	$2,%got(mips_bus_feq)($28)
$L53:
	li	$4,8000			# 0x1f40
$L56:
	lw	$3,0($2)
	li	$2,1125842944			# 0x431b0000
	ori	$2,$2,0xde83
	multu	$3,$2
	li	$2,-1342177280			# 0xffffffffb0000000
	ori	$5,$2,0xb00
	mfhi	$3
	srl	$3,$3,19
	nop
	divu	$0,$4,$3
	bne	$3,$0,1f
	nop
	break	7
1:
	mflo	$4
	srl	$4,$4,2
$L33:
	.loc 1 99 0
	lw	$2,0($5)
	xori	$2,$2,0x1
	andi	$2,$2,0x1
	.loc 1 165 0
	.loc 1 99 0
	bne	$2,$0,$L55
	li	$2,-1342177280			# 0xffffffffb0000000

	.loc 1 103 0
	.loc 1 102 0
	bne	$4,$0,$L33
	lw	$25,%call16(printf)($28)

	.loc 1 103 0
	lw	$4,%got($LC50)($28)
	lw	$5,%got(__func__.0)($28)
	addiu	$4,$4,%lo($LC50)
	jalr	$25
	addiu	$5,$5,%lo(__func__.0)

	lw	$28,16($sp)
$LBE4:
$LBE3:
	.loc 1 163 0
	li	$6,-1			# 0xffffffffffffffff
	.loc 1 165 0
	li	$2,-1342177280			# 0xffffffffb0000000
$L55:
	ori	$2,$2,0xb10
	lw	$3,0($2)
	li	$4,-2561			# 0xfffffffffffff5ff
	.loc 1 167 0
	move	$5,$6
	.loc 1 165 0
	and	$3,$3,$4
	sw	$3,0($2)
$L1:
	.loc 1 168 0
	lw	$31,24($sp)
	move	$2,$5
	j	$31
	addiu	$sp,$sp,32

	.set	macro
	.set	reorder
$LFE3:
	.end	raspi_cmd
	.rdata
	.align	2
	.type	__func__.1, @object
	.size	__func__.1, 17
__func__.1:
	.ascii	"raspi_wait_ready\000"
	.section	.rodata.str1.4
	.align	2
$LC51:
	.ascii	"%s: flash is busy, status=%x\n\000"
	.text
	.align	2
	.ent	raspi_wait_ready
	.type	raspi_wait_ready, @function
raspi_wait_ready:
$LFB4:
	.loc 1 171 0
	.frame	$sp,64,$31		# vars= 8, regs= 4/0, args= 32, gp= 8
	.mask	0x80070000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-64
$LCFI2:
	sw	$31,60($sp)
$LCFI3:
	sw	$18,56($sp)
$LCFI4:
	sw	$17,52($sp)
$LCFI5:
	sw	$16,48($sp)
$LCFI6:
	.cprestore	32
	.loc 1 175 0
	sll	$18,$4,5
	subu	$2,$18,$4
	sll	$2,$2,2
	addu	$2,$2,$4
	sll	$2,$2,3
	addiu	$2,$2,1000
	.loc 1 171 0
	move	$16,$4
	.loc 1 173 0
	sb	$0,40($sp)
	.loc 1 175 0
	blez	$2,$L64
	move	$17,$0

$L62:
	.loc 1 176 0
	lw	$25,%got(raspi_cmd)($28)
	li	$2,1			# 0x1
	li	$4,5			# 0x5
	addiu	$25,$25,%lo(raspi_cmd)
	move	$5,$0
	move	$6,$0
	addiu	$7,$sp,40
	sw	$2,24($sp)
	sw	$2,16($sp)
	jalr	$25
	sw	$0,20($sp)

	.loc 1 177 0
	lbu	$2,40($sp)
	.loc 1 176 0
	lw	$28,32($sp)
	.loc 1 180 0
	li	$4,1000			# 0x3e8
	.loc 1 177 0
	andi	$2,$2,0x21
	.loc 1 180 0
	lw	$25,%call16(udelay)($28)
	.loc 1 175 0
	.loc 1 177 0
	beq	$2,$0,$L57
	addiu	$17,$17,1

	.loc 1 180 0
	jalr	$25
	nop

	.loc 1 175 0
	subu	$2,$18,$16
	sll	$2,$2,2
	addu	$2,$2,$16
	sll	$2,$2,3
	addiu	$2,$2,1000
	slt	$2,$17,$2
	.loc 1 180 0
	.loc 1 175 0
	bne	$2,$0,$L62
	lw	$28,32($sp)

$L64:
	.loc 1 182 0
	lw	$4,%got($LC51)($28)
	lw	$5,%got(__func__.1)($28)
	lbu	$6,40($sp)
	lw	$25,%call16(printf)($28)
	addiu	$4,$4,%lo($LC51)
	addiu	$5,$5,%lo(__func__.1)
	jalr	$25
	andi	$6,$6,0x00ff

	lw	$28,32($sp)
	.loc 1 183 0
	li	$2,-1			# 0xffffffffffffffff
$L57:
	.loc 1 184 0
	lw	$31,60($sp)
	lw	$18,56($sp)
	lw	$17,52($sp)
	lw	$16,48($sp)
	j	$31
	addiu	$sp,$sp,64

	.set	macro
	.set	reorder
$LFE4:
	.end	raspi_wait_ready
	.align	2
	.globl	addr2info
	.ent	addr2info
	.type	addr2info, @function
addr2info:
$LFB5:
	.loc 1 187 0
	.frame	$sp,0,$31		# vars= 0, regs= 0/0, args= 0, gp= 0
	.mask	0x00000000,0
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	.loc 1 191 0
	lw	$5,%got(flash_info)($28)
	.loc 1 192 0
	li	$2,65535			# 0xffff
	lw	$3,8($5)
	.loc 1 204 0
	.loc 1 192 0
	beq	$3,$2,$L76
	move	$6,$0

	lw	$3,12($5)
	sltu	$2,$4,$3
	.loc 1 200 0
	.loc 1 192 0
	bne	$2,$0,$L73
	move	$6,$5

	lw	$2,0($5)
	addu	$2,$3,$2
	addiu	$2,$2,-1
	sltu	$2,$2,$4
	beq	$2,$0,$L65
	nop

$L73:
	.loc 1 204 0
	move	$6,$0
$L65:
$L76:
	.loc 1 205 0
	j	$31
	move	$2,$6

	.set	macro
	.set	reorder
$LFE5:
	.end	addr2info
	.section	.rodata.str1.4
	.align	2
$LC52:
	.ascii	"Spi flash ID: 0x%x  Size: %ld MB in %d Sectors\n"
	.ascii	"\tSector Start Addresses:\000"
	.align	2
$LC53:
	.ascii	"\n"
	.ascii	"   \000"
	.align	2
$LC55:
	.ascii	" (RO)\000"
	.align	2
$LC56:
	.ascii	"     \000"
	.align	2
$LC54:
	.ascii	" %08lX%s\000"
	.align	2
$LC57:
	.ascii	"\n\000"
	.text
	.align	2
	.globl	flash_print_info
	.ent	flash_print_info
	.type	flash_print_info, @function
flash_print_info:
$LFB6:
	.loc 1 208 0
	.frame	$sp,48,$31		# vars= 0, regs= 5/0, args= 16, gp= 8
	.mask	0x800f0000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-48
$LCFI7:
	sw	$31,40($sp)
$LCFI8:
	sw	$19,36($sp)
$LCFI9:
	sw	$18,32($sp)
$LCFI10:
	sw	$17,28($sp)
$LCFI11:
	sw	$16,24($sp)
$LCFI12:
	.cprestore	16
	.loc 1 211 0
	lw	$18,%got(spi_dev)($28)
	.loc 1 208 0
	move	$19,$4
	.loc 1 211 0
	lw	$4,%got($LC52)($28)
	lw	$2,%lo(spi_dev)($18)
	lw	$25,%call16(printf)($28)
	addiu	$4,$4,%lo($LC52)
	lw	$6,8($2)
	lw	$7,16($2)
	lw	$5,4($2)
	srl	$6,$6,20
	.loc 1 212 0
	.loc 1 211 0
	jalr	$25
	move	$16,$0

	.loc 1 212 0
	lw	$2,%lo(spi_dev)($18)
	lw	$2,16($2)
	.loc 1 211 0
	.loc 1 212 0
	beq	$2,$0,$L88
	lw	$28,16($sp)

	addiu	$17,$19,12
$L86:
	.loc 1 213 0
	li	$3,1717960704			# 0x66660000
	ori	$3,$3,0x6667
	mult	$16,$3
	sra	$2,$16,31
	.loc 1 214 0
	lw	$4,%got($LC53)($28)
	lw	$25,%call16(printf)($28)
	.loc 1 213 0
	mfhi	$3
	sra	$3,$3,1
	subu	$3,$3,$2
	sll	$2,$3,2
	addu	$2,$2,$3
	.loc 1 214 0
	.loc 1 213 0
	bne	$16,$2,$L81
	addiu	$4,$4,%lo($LC53)

	.loc 1 214 0
	jalr	$25
	nop

	lw	$28,16($sp)
$L81:
	.loc 1 216 0
	addu	$2,$16,$19
	lw	$3,%got($LC55)($28)
	lbu	$2,1064($2)
	lw	$5,0($17)
	bne	$2,$0,$L85
	addiu	$6,$3,%lo($LC55)

	lw	$2,%got($LC56)($28)
	addiu	$6,$2,%lo($LC56)
$L85:
	lw	$4,%got($LC54)($28)
	lw	$25,%call16(printf)($28)
	.loc 1 212 0
	addiu	$16,$16,1
	.loc 1 216 0
	jalr	$25
	addiu	$4,$4,%lo($LC54)

	.loc 1 212 0
	lw	$2,%lo(spi_dev)($18)
	.loc 1 216 0
	lw	$28,16($sp)
	.loc 1 212 0
	lw	$2,16($2)
	sltu	$2,$16,$2
	bne	$2,$0,$L86
	addiu	$17,$17,4

$L88:
	.loc 1 218 0
	lw	$4,%got($LC57)($28)
	lw	$25,%call16(printf)($28)
	jalr	$25
	addiu	$4,$4,%lo($LC57)

	lw	$28,16($sp)
	.loc 1 219 0
	lw	$31,40($sp)
	lw	$19,36($sp)
	lw	$18,32($sp)
	lw	$17,28($sp)
	lw	$16,24($sp)
	j	$31
	addiu	$sp,$sp,48

	.set	macro
	.set	reorder
$LFE6:
	.end	flash_print_info
	.rdata
	.align	2
	.type	__func__.3, @object
	.size	__func__.3, 12
__func__.3:
	.ascii	"flash_erase\000"
	.section	.rodata.str1.4
	.align	2
$LC58:
	.ascii	"%s wrong \n\000"
	.align	2
$LC59:
	.ascii	".\000"
	.text
	.align	2
	.globl	flash_erase
	.ent	flash_erase
	.type	flash_erase, @function
flash_erase:
$LFB7:
	.loc 1 224 0
	.frame	$sp,64,$31		# vars= 0, regs= 6/0, args= 32, gp= 8
	.mask	0x801f0000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-64
$LCFI13:
	sw	$31,60($sp)
$LCFI14:
	sw	$20,56($sp)
$LCFI15:
	sw	$19,52($sp)
$LCFI16:
	sw	$18,48($sp)
$LCFI17:
	sw	$17,44($sp)
$LCFI18:
	sw	$16,40($sp)
$LCFI19:
	.cprestore	32
	.loc 1 225 0
	.loc 1 229 0
	bltz	$5,$L91
	move	$16,$0

	slt	$2,$6,$5
	bne	$2,$0,$L91
	nop

	lhu	$2,4($4)
	slt	$2,$2,$6
	.loc 1 237 0
	.loc 1 229 0
	beq	$2,$0,$L90
	sll	$3,$6,2

$L91:
	.loc 1 231 0
	lw	$4,%got($LC58)($28)
	lw	$5,%got(__func__.3)($28)
	lw	$25,%call16(printf)($28)
	addiu	$4,$4,%lo($LC58)
	jalr	$25
	addiu	$5,$5,%lo(__func__.3)

	lw	$28,32($sp)
	.loc 1 232 0
	b	$L89
	move	$2,$0

$L99:
	.loc 1 241 0
	.loc 1 242 0
	b	$L96
	li	$16,-1			# 0xffffffffffffffff

$L90:
	.loc 1 236 0
	sll	$2,$5,2
	.loc 1 237 0
	addu	$3,$3,$4
	.loc 1 236 0
	addu	$2,$2,$4
	lw	$4,12($2)
	.loc 1 237 0
	lw	$3,12($3)
	.loc 1 236 0
	li	$2,1140850688			# 0x44000000
	.loc 1 237 0
	subu	$18,$3,$4
	.loc 1 236 0
	.loc 1 239 0
	blez	$18,$L96
	addu	$20,$4,$2

	.loc 1 240 0
	lw	$2,%got(raspi_wait_ready)($28)
$L100:
	addiu	$19,$2,%lo(raspi_wait_ready)
	move	$25,$19
	jalr	$25
	li	$4,3			# 0x3

	lw	$28,32($sp)
	.loc 1 244 0
	li	$4,6			# 0x6
	move	$5,$0
	lw	$3,%got(raspi_cmd)($28)
	move	$6,$0
	move	$7,$0
	.loc 1 240 0
	bne	$2,$0,$L99
	addiu	$17,$3,%lo(raspi_cmd)

	.loc 1 244 0
	move	$25,$17
	sw	$0,16($sp)
	sw	$0,20($sp)
	jalr	$25
	sw	$0,24($sp)

	.loc 1 245 0
	addu	$5,$20,$16
	move	$6,$0
	move	$7,$0
	li	$4,216			# 0xd8
	move	$25,$17
	sw	$0,16($sp)
	sw	$0,20($sp)
	jalr	$25
	sw	$0,24($sp)

	lw	$28,32($sp)
	.loc 1 246 0
	lw	$4,%got($LC59)($28)
	lw	$25,%call16(printf)($28)
	jalr	$25
	addiu	$4,$4,%lo($LC59)

	.loc 1 247 0
	move	$25,$19
	jalr	$25
	li	$4,9500			# 0x251c

	lw	$28,32($sp)
	.loc 1 239 0
	lw	$2,%got(spi_dev)($28)
	lw	$2,%lo(spi_dev)($2)
	lw	$2,12($2)
	addu	$16,$16,$2
	slt	$2,$16,$18
	.loc 1 240 0
	.loc 1 239 0
	bne	$2,$0,$L100
	lw	$2,%got(raspi_wait_ready)($28)

$L96:
	.loc 1 250 0
	move	$2,$16
$L89:
	.loc 1 251 0
	lw	$31,60($sp)
	lw	$20,56($sp)
	lw	$19,52($sp)
	lw	$18,48($sp)
	lw	$17,44($sp)
	lw	$16,40($sp)
	j	$31
	addiu	$sp,$sp,64

	.set	macro
	.set	reorder
$LFE7:
	.end	flash_erase
	.rdata
	.align	2
	.type	__func__.2, @object
	.size	__func__.2, 15
__func__.2:
	.ascii	"spiflash_write\000"
	.section	.rodata.str1.4
	.align	2
$LC60:
	.ascii	"%s: end address %#x + %#x out of flash space!\n\000"
	.align	2
$LC61:
	.ascii	"%s: rc:%x page_size:%x\n\000"
	.text
	.align	2
	.globl	spiflash_write
	.ent	spiflash_write
	.type	spiflash_write, @function
spiflash_write:
$LFB8:
	.loc 1 256 0
	.frame	$sp,80,$31		# vars= 0, regs= 9/0, args= 32, gp= 8
	.mask	0x80ff0000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-80
$LCFI20:
	sw	$31,72($sp)
$LCFI21:
	sw	$23,68($sp)
$LCFI22:
	sw	$22,64($sp)
$LCFI23:
	sw	$21,60($sp)
$LCFI24:
	sw	$20,56($sp)
$LCFI25:
	sw	$19,52($sp)
$LCFI26:
	sw	$18,48($sp)
$LCFI27:
	sw	$17,44($sp)
$LCFI28:
	sw	$16,40($sp)
$LCFI29:
	.cprestore	32
	.loc 1 256 0
	move	$19,$6
	move	$23,$4
	move	$20,$5
	.loc 1 259 0
	.loc 1 262 0
	beq	$6,$0,$L103
	move	$18,$0

	.loc 1 265 0
	lw	$21,%got(spi_dev)($28)
	addu	$3,$5,$6
	lw	$2,%lo(spi_dev)($21)
	lw	$2,8($2)
	sltu	$2,$2,$3
	.loc 1 269 0
	.loc 1 265 0
	beq	$2,$0,$L104
	lw	$22,%got(raspi_wait_ready)($28)

	.loc 1 266 0
	lw	$4,%got($LC60)($28)
	lw	$5,%got(__func__.2)($28)
	lw	$25,%call16(printf)($28)
	addiu	$4,$4,%lo($LC60)
	addiu	$5,$5,%lo(__func__.2)
	move	$6,$20
	jalr	$25
	move	$7,$19

	lw	$28,32($sp)
	.loc 1 267 0
	b	$L101
	li	$3,-1			# 0xffffffffffffffff

$L104:
	.loc 1 269 0
	addiu	$25,$22,%lo(raspi_wait_ready)
	jalr	$25
	li	$4,100			# 0x64

	lw	$28,32($sp)
	.loc 1 270 0
	.loc 1 269 0
	bne	$2,$0,$L101
	li	$3,-1			# 0xffffffffffffffff

	.loc 1 272 0
	b	$L105
	lw	$2,%lo(spi_dev)($21)

$L112:
	.loc 1 287 0
	lw	$4,%got($LC61)($28)
	lw	$5,%got(__func__.2)($28)
	lw	$25,%call16(printf)($28)
	addiu	$4,$4,%lo($LC61)
	addiu	$5,$5,%lo(__func__.2)
	move	$6,$16
	jalr	$25
	move	$7,$17

	.loc 1 288 0
	b	$L103
	lw	$28,32($sp)

$L105:
	.loc 1 272 0
	lw	$2,20($2)
	divu	$0,$20,$2
	bne	$2,$0,1f
	nop
	break	7
1:
	mfhi	$5
	.loc 1 294 0
	.loc 1 273 0
	blez	$19,$L101
	move	$3,$18

	.loc 1 275 0
	lw	$2,%lo(spi_dev)($21)
$L113:
	.loc 1 278 0
	lw	$3,%got(raspi_cmd)($28)
	.loc 1 274 0
	subu	$17,$19,$18
	.loc 1 275 0
	lw	$2,20($2)
	.loc 1 278 0
	addiu	$16,$3,%lo(raspi_cmd)
	move	$25,$16
	.loc 1 275 0
	subu	$2,$2,$5
	sltu	$3,$2,$17
	.loc 1 278 0
	li	$4,6			# 0x6
	move	$5,$0
	move	$6,$0
	move	$7,$0
	sw	$0,16($sp)
	sw	$0,20($sp)
	sw	$0,24($sp)
	.loc 1 276 0
	.loc 1 278 0
	jalr	$25
	movn	$17,$2,$3

	.loc 1 279 0
	li	$2,2			# 0x2
	addu	$5,$20,$18
	move	$25,$16
	addu	$7,$23,$18
	li	$4,2			# 0x2
	move	$6,$0
	sw	$2,24($sp)
	sw	$17,16($sp)
	jalr	$25
	sw	$0,20($sp)

	move	$16,$2
	.loc 1 285 0
	addiu	$25,$22,%lo(raspi_wait_ready)
	jalr	$25
	li	$4,100			# 0x64

	.loc 1 286 0
	sltu	$2,$16,$17
	.loc 1 285 0
	lw	$28,32($sp)
	.loc 1 291 0
	.loc 1 286 0
	bne	$2,$0,$L112
	move	$5,$0

	.loc 1 290 0
	addu	$18,$18,$16
	.loc 1 273 0
	slt	$2,$18,$19
	.loc 1 275 0
	.loc 1 273 0
	bne	$2,$0,$L113
	lw	$2,%lo(spi_dev)($21)

$L103:
	.loc 1 294 0
	move	$3,$18
$L101:
	.loc 1 295 0
	lw	$31,72($sp)
	lw	$23,68($sp)
	lw	$22,64($sp)
	lw	$21,60($sp)
	lw	$20,56($sp)
	lw	$19,52($sp)
	lw	$18,48($sp)
	lw	$17,44($sp)
	lw	$16,40($sp)
	move	$2,$3
	j	$31
	addiu	$sp,$sp,80

	.set	macro
	.set	reorder
$LFE8:
	.end	spiflash_write
	.section	.rodata.str1.4
	.align	2
$LC62:
	.ascii	"The length is out of flash space.\n\000"
	.text
	.align	2
	.globl	flash_read_buf
	.ent	flash_read_buf
	.type	flash_read_buf, @function
flash_read_buf:
$LFB9:
	.loc 1 298 0
	.frame	$sp,64,$31		# vars= 0, regs= 5/0, args= 32, gp= 8
	.mask	0x800f0000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-64
$LCFI30:
	sw	$31,56($sp)
$LCFI31:
	sw	$19,52($sp)
$LCFI32:
	sw	$18,48($sp)
$LCFI33:
	sw	$17,44($sp)
$LCFI34:
	sw	$16,40($sp)
$LCFI35:
	.cprestore	32
	.loc 1 302 0
	lw	$3,0($4)
	.loc 1 300 0
	li	$2,1140850688			# 0x44000000
	addu	$16,$5,$2
	.loc 1 303 0
	lw	$4,%got($LC62)($28)
	.loc 1 302 0
	addu	$2,$16,$7
	sltu	$3,$3,$2
	.loc 1 303 0
	lw	$25,%call16(printf)($28)
	.loc 1 298 0
	move	$18,$7
	.loc 1 303 0
	addiu	$4,$4,%lo($LC62)
	.loc 1 298 0
	move	$19,$6
	.loc 1 299 0
	.loc 1 302 0
	bne	$3,$0,$L116
	move	$17,$0

	bgtz	$7,$L115
	nop

$L116:
	.loc 1 303 0
	jalr	$25
	nop

	.loc 1 304 0
	b	$L117
	lw	$28,32($sp)

$L115:
	.loc 1 307 0
	lw	$25,%got(raspi_wait_ready)($28)
	addiu	$25,$25,%lo(raspi_wait_ready)
	jalr	$25
	li	$4,1			# 0x1

	lw	$28,32($sp)
	.loc 1 310 0
	move	$5,$16
	li	$4,3			# 0x3
	move	$6,$0
	.loc 1 308 0
	.loc 1 307 0
	bne	$2,$0,$L114
	li	$3,-1			# 0xffffffffffffffff

	.loc 1 310 0
	lw	$25,%got(raspi_cmd)($28)
	lw	$7,0($19)
	li	$2,1			# 0x1
	sw	$18,16($sp)
	sw	$2,24($sp)
	addiu	$25,$25,%lo(raspi_cmd)
	jalr	$25
	sw	$0,20($sp)

	lw	$28,32($sp)
	move	$17,$2
$L117:
	.loc 1 313 0
	move	$3,$17
$L114:
	.loc 1 314 0
	lw	$31,56($sp)
	lw	$19,52($sp)
	lw	$18,48($sp)
	lw	$17,44($sp)
	lw	$16,40($sp)
	move	$2,$3
	j	$31
	addiu	$sp,$sp,64

	.set	macro
	.set	reorder
$LFE9:
	.end	flash_read_buf
	.align	2
	.globl	flash_write
	.ent	flash_write
	.type	flash_write, @function
flash_write:
$LFB10:
	.loc 1 321 0
	.frame	$sp,72,$31		# vars= 8, regs= 10/0, args= 16, gp= 8
	.mask	0xc0ff0000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-72
$LCFI36:
	sw	$31,68($sp)
$LCFI37:
	sw	$fp,64($sp)
$LCFI38:
	sw	$23,60($sp)
$LCFI39:
	sw	$22,56($sp)
$LCFI40:
	sw	$21,52($sp)
$LCFI41:
	sw	$20,48($sp)
$LCFI42:
	sw	$19,44($sp)
$LCFI43:
	sw	$18,40($sp)
$LCFI44:
	sw	$17,36($sp)
$LCFI45:
	sw	$16,32($sp)
$LCFI46:
	.cprestore	16
	.loc 1 325 0
	lw	$25,%call16(addr2info)($28)
	.loc 1 324 0
	addu	$2,$5,$6
	.loc 1 321 0
	move	$20,$4
	.loc 1 325 0
	move	$4,$5
	.loc 1 321 0
	move	$18,$5
	move	$21,$6
	.loc 1 324 0
	.loc 1 325 0
	jalr	$25
	addiu	$16,$2,-1

	lw	$28,16($sp)
	.loc 1 326 0
	move	$4,$16
	lw	$25,%call16(addr2info)($28)
	.loc 1 325 0
	.loc 1 326 0
	jalr	$25
	move	$22,$2

	move	$23,$2
	lw	$28,16($sp)
	.loc 1 334 0
	.loc 1 333 0
	beq	$21,$0,$L119
	move	$2,$0

	.loc 1 336 0
	beq	$22,$0,$L122
	nop

	.loc 1 339 0
	.loc 1 336 0
	bne	$23,$0,$L121
	sltu	$9,$23,$22

$L122:
	.loc 1 337 0
	b	$L119
	li	$2,8			# 0x8

$L121:
	.loc 1 339 0
	bne	$9,$0,$L135
	move	$17,$22

$L133:
	.loc 1 341 0
	lhu	$2,4($17)
	.loc 1 340 0
	lw	$4,12($17)
	lw	$3,0($17)
	.loc 1 342 0
	move	$5,$2
	.loc 1 341 0
	addiu	$2,$2,-1
	sll	$8,$2,16
	.loc 1 340 0
	addu	$4,$4,$3
	.loc 1 341 0
	sra	$8,$8,16
	.loc 1 342 0
	beq	$5,$0,$L150
	move	$6,$0

	move	$7,$5
	addiu	$3,$17,12
$L132:
	.loc 1 343 0
	beq	$6,$8,$L130
	move	$5,$4

	lw	$5,4($3)
$L130:
	.loc 1 344 0
	lw	$2,0($3)
	sltu	$5,$18,$5
	sltu	$2,$16,$2
	bne	$2,$0,$L128
	addiu	$3,$3,4

	beq	$5,$0,$L128
	addu	$2,$6,$17

	lbu	$2,1064($2)
	bne	$2,$0,$L119
	li	$2,4			# 0x4

$L128:
	.loc 1 342 0
	addiu	$6,$6,1
	slt	$2,$6,$7
	bne	$2,$0,$L132
	nop

$L150:
	.loc 1 339 0
	addiu	$17,$17,1328
	sltu	$2,$23,$17
	beq	$2,$0,$L133
	nop

	.loc 1 349 0
	bne	$9,$0,$L135
	move	$17,$22

$L155:
	.loc 1 406 0
	.loc 1 349 0
	beq	$21,$0,$L119
	move	$2,$0

	.loc 1 351 0
	lw	$6,12($17)
	lw	$5,0($17)
	.loc 1 364 0
	lw	$4,12($22)
	.loc 1 351 0
	addu	$2,$6,$5
	subu	$16,$2,$18
	.loc 1 353 0
	sltu	$2,$21,$16
	.loc 1 364 0
	sltu	$3,$20,$4
	.loc 1 354 0
	.loc 1 364 0
	bne	$3,$0,$L138
	movn	$16,$21,$2

	lw	$2,0($22)
	addu	$2,$4,$2
	sltu	$2,$2,$20
	.loc 1 396 0
	.loc 1 364 0
	bne	$2,$0,$L156
	addu	$2,$6,$5

$LBB5:
	.loc 1 371 0
	li	$2,1140850688			# 0x44000000
	.loc 1 372 0
	srl	$3,$21,10
	.loc 1 369 0
	sw	$18,28($sp)
	.loc 1 370 0
	move	$fp,$20
	.loc 1 371 0
	.loc 1 372 0
	beq	$3,$0,$L153
	addu	$18,$18,$2

	move	$19,$3
$L142:
	.loc 1 374 0
	lw	$25,%call16(malloc)($28)
	li	$4,1024			# 0x400
	.loc 1 372 0
	.loc 1 374 0
	jalr	$25
	addiu	$19,$19,-1

	lw	$28,16($sp)
	.loc 1 375 0
	move	$5,$20
	li	$7,1024			# 0x400
	lw	$25,%call16(flash_read_buf)($28)
	move	$4,$17
	addiu	$6,$sp,24
	.loc 1 374 0
	.loc 1 375 0
	jalr	$25
	sw	$2,24($sp)

	lw	$28,16($sp)
	.loc 1 376 0
	lw	$4,24($sp)
	move	$5,$18
	lw	$25,%call16(spiflash_write)($28)
	li	$6,1024			# 0x400
	.loc 1 377 0
	.loc 1 376 0
	jalr	$25
	addiu	$20,$20,1024

	lw	$28,16($sp)
	.loc 1 379 0
	lw	$4,24($sp)
	lw	$25,%call16(free)($28)
	.loc 1 378 0
	.loc 1 379 0
	jalr	$25
	addiu	$18,$18,1024

	bne	$19,$0,$L142
	lw	$28,16($sp)

$L153:
	.loc 1 382 0
	andi	$16,$16,0x3ff
	.loc 1 385 0
	.loc 1 382 0
	beq	$16,$0,$L143
	lw	$25,%call16(malloc)($28)

	.loc 1 385 0
	jalr	$25
	move	$4,$16

	lw	$28,16($sp)
	.loc 1 386 0
	move	$7,$16
	move	$5,$20
	lw	$25,%call16(flash_read_buf)($28)
	move	$4,$17
	addiu	$6,$sp,24
	.loc 1 385 0
	.loc 1 386 0
	jalr	$25
	sw	$2,24($sp)

	lw	$28,16($sp)
	.loc 1 387 0
	lw	$4,24($sp)
	move	$5,$18
	lw	$25,%call16(spiflash_write)($28)
	jalr	$25
	move	$6,$16

	lw	$28,16($sp)
	.loc 1 388 0
	lw	$25,%call16(free)($28)
	jalr	$25
	lw	$4,24($sp)

	lw	$28,16($sp)
$L143:
	.loc 1 391 0
	lw	$18,28($sp)
$LBE5:
	.loc 1 392 0
	b	$L136
	move	$20,$fp

$L138:
	.loc 1 396 0
	addu	$2,$6,$5
$L156:
	subu	$16,$2,$18
	.loc 1 400 0
	lw	$25,%call16(spiflash_write)($28)
	.loc 1 399 0
	li	$2,1140850688			# 0x44000000
	addu	$18,$18,$2
	.loc 1 400 0
	move	$4,$20
	.loc 1 397 0
	sltu	$2,$21,$16
	.loc 1 400 0
	move	$5,$18
	move	$6,$21
	.loc 1 398 0
	.loc 1 400 0
	jalr	$25
	movn	$16,$21,$2

	lw	$28,16($sp)
	.loc 1 403 0
	addu	$20,$20,$16
	.loc 1 401 0
	subu	$21,$21,$16
	.loc 1 402 0
	addu	$18,$18,$16
$L136:
	.loc 1 349 0
	addiu	$17,$17,1328
	sltu	$2,$23,$17
	beq	$2,$0,$L155
	nop

$L135:
	.loc 1 406 0
	move	$2,$0
$L119:
	.loc 1 407 0
	lw	$31,68($sp)
	lw	$fp,64($sp)
	lw	$23,60($sp)
	lw	$22,56($sp)
	lw	$21,52($sp)
	lw	$20,48($sp)
	lw	$19,44($sp)
	lw	$18,40($sp)
	lw	$17,36($sp)
	lw	$16,32($sp)
	j	$31
	addiu	$sp,$sp,72

	.set	macro
	.set	reorder
$LFE10:
	.end	flash_write
	.section	.rodata.str1.4
	.align	2
$LC63:
	.ascii	"FLASH: %2d MB %s at mode %d\r\n\000"
	.text
	.align	2
	.globl	flash_init
	.ent	flash_init
	.type	flash_init, @function
flash_init:
$LFB11:
	.loc 1 410 0
	.frame	$sp,64,$31		# vars= 8, regs= 3/0, args= 32, gp= 8
	.mask	0x80030000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	nomacro
	
	addiu	$sp,$sp,-64
$LCFI47:
	sw	$31,56($sp)
$LCFI48:
	sw	$17,52($sp)
$LCFI49:
	sw	$16,48($sp)
$LCFI50:
	.cprestore	32
	.loc 1 414 0
	li	$16,-1342177280			# 0xffffffffb0000000
	ori	$17,$16,0x34
	lw	$2,0($17)
	.loc 1 417 0
	lw	$25,%call16(udelay)($28)
	.loc 1 415 0
	li	$3,262144			# 0x40000
	or	$2,$2,$3
	sw	$2,40($sp)
	.loc 1 417 0
	li	$4,1			# 0x1
	.loc 1 416 0
	sw	$2,0($17)
	.loc 1 417 0
	jalr	$25
	nop

	.loc 1 418 0
	lw	$3,40($sp)
	.loc 1 417 0
	lw	$28,32($sp)
	.loc 1 418 0
	li	$2,-327680			# 0xfffffffffffb0000
	ori	$2,$2,0xffff
	and	$3,$3,$2
	.loc 1 421 0
	ori	$8,$16,0xb14
	.loc 1 420 0
	li	$2,338			# 0x152
	ori	$16,$16,0xb10
	.loc 1 418 0
	sw	$3,40($sp)
	.loc 1 422 0
	lw	$25,%got(raspi_cmd)($28)
	.loc 1 419 0
	sw	$3,0($17)
	.loc 1 420 0
	sw	$2,0($16)
	.loc 1 421 0
	li	$2,9			# 0x9
	sw	$2,0($8)
	.loc 1 422 0
	li	$2,4			# 0x4
	sw	$2,16($sp)
	li	$2,1			# 0x1
	li	$4,159			# 0x9f
	move	$5,$0
	move	$6,$0
	addiu	$7,$sp,40
	sw	$2,24($sp)
	addiu	$25,$25,%lo(raspi_cmd)
	jalr	$25
	sw	$0,20($sp)

	.loc 1 423 0
	lw	$3,40($sp)
	.loc 1 422 0
	lw	$28,32($sp)
	move	$5,$0
	.loc 1 423 0
	andi	$2,$3,0xff
	srl	$4,$3,16
	lw	$16,%got(flash_info)($28)
	sll	$2,$2,16
	andi	$3,$3,0xff00
	or	$2,$2,$3
	andi	$4,$4,0xff
	lw	$17,%got(spi_dev)($28)
	lw	$6,%got(flash_table)($28)
	or	$2,$2,$4
	sw	$2,8($16)
$L158:
	.loc 1 425 0
	addu	$3,$5,$6
	.loc 1 426 0
	lw	$4,4($3)
	.loc 1 424 0
	.loc 1 426 0
	beq	$2,$4,$L169
	addiu	$5,$5,28

	bne	$4,$0,$L158
	nop

$L169:
	.loc 1 430 0
	lw	$5,8($3)
	lw	$4,%got($LC63)($28)
	lw	$7,24($3)
	lw	$25,%call16(printf)($28)
	lw	$6,0($3)
	sw	$3,%lo(spi_dev)($17)
	addiu	$4,$4,%lo($LC63)
	jalr	$25
	srl	$5,$5,20

	.loc 1 431 0
	lw	$3,%lo(spi_dev)($17)
	.loc 1 430 0
	lw	$28,32($sp)
	.loc 1 431 0
	lw	$2,8($3)
	sw	$2,0($16)
	.loc 1 432 0
	lw	$2,16($3)
	.loc 1 433 0
	andi	$3,$2,0xffff
	.loc 1 432 0
	.loc 1 433 0
	beq	$3,$0,$L168
	sh	$2,4($16)

	lw	$2,%got(flash_info)($28)
	li	$5,-1140850688			# 0xffffffffbc000000
	li	$6,65536			# 0x10000
	lhu	$3,4($2)
	addiu	$4,$2,1064
	addiu	$2,$2,12
$L166:
	addiu	$3,$3,-1
	.loc 1 434 0
	sw	$5,0($2)
	.loc 1 435 0
	sb	$5,0($4)
	addiu	$2,$2,4
	addu	$5,$5,$6
	bne	$3,$0,$L166
	addiu	$4,$4,1

$L168:
	.loc 1 439 0
	lw	$2,%lo(spi_dev)($17)
	.loc 1 437 0
	lw	$4,%got(flash_info)($28)
	lw	$3,%got(info)($28)
	.loc 1 440 0
	lw	$2,8($2)
	lw	$31,56($sp)
	lw	$17,52($sp)
	lw	$16,48($sp)
	addiu	$sp,$sp,64
	.loc 1 437 0
	.loc 1 440 0
	j	$31
	sw	$4,0($3)

	.set	macro
	.set	reorder
$LFE11:
	.end	flash_init

	.comm	info,4,4

	.comm	flash_info,1328,4
	.local	spi_dev
	.comm	spi_dev,4,4
	.section	.debug_frame,"",@progbits
$Lframe0:
	.4byte	$LECIE0-$LSCIE0
$LSCIE0:
	.4byte	0xffffffff
	.byte	0x1
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 4
	.byte	0x1f
	.byte	0xc
	.uleb128 0x1d
	.uleb128 0x0
	.align	2
$LECIE0:
$LSFDE0:
	.4byte	$LEFDE0-$LASFDE0
$LASFDE0:
	.4byte	$Lframe0
	.4byte	$LFB3
	.4byte	$LFE3-$LFB3
	.byte	0x4
	.4byte	$LCFI0-$LFB3
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	$LCFI1-$LCFI0
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -2
	.align	2
$LEFDE0:
$LSFDE2:
	.4byte	$LEFDE2-$LASFDE2
$LASFDE2:
	.4byte	$Lframe0
	.4byte	$LFB4
	.4byte	$LFE4-$LFB4
	.byte	0x4
	.4byte	$LCFI2-$LFB4
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.4byte	$LCFI6-$LCFI2
	.byte	0x11
	.uleb128 0x10
	.sleb128 -4
	.byte	0x11
	.uleb128 0x11
	.sleb128 -3
	.byte	0x11
	.uleb128 0x12
	.sleb128 -2
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -1
	.align	2
$LEFDE2:
$LSFDE4:
	.4byte	$LEFDE4-$LASFDE4
$LASFDE4:
	.4byte	$Lframe0
	.4byte	$LFB5
	.4byte	$LFE5-$LFB5
	.align	2
$LEFDE4:
$LSFDE6:
	.4byte	$LEFDE6-$LASFDE6
$LASFDE6:
	.4byte	$Lframe0
	.4byte	$LFB6
	.4byte	$LFE6-$LFB6
	.byte	0x4
	.4byte	$LCFI7-$LFB6
	.byte	0xe
	.uleb128 0x30
	.byte	0x4
	.4byte	$LCFI12-$LCFI7
	.byte	0x11
	.uleb128 0x10
	.sleb128 -6
	.byte	0x11
	.uleb128 0x11
	.sleb128 -5
	.byte	0x11
	.uleb128 0x12
	.sleb128 -4
	.byte	0x11
	.uleb128 0x13
	.sleb128 -3
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -2
	.align	2
$LEFDE6:
$LSFDE8:
	.4byte	$LEFDE8-$LASFDE8
$LASFDE8:
	.4byte	$Lframe0
	.4byte	$LFB7
	.4byte	$LFE7-$LFB7
	.byte	0x4
	.4byte	$LCFI13-$LFB7
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.4byte	$LCFI19-$LCFI13
	.byte	0x11
	.uleb128 0x10
	.sleb128 -6
	.byte	0x11
	.uleb128 0x11
	.sleb128 -5
	.byte	0x11
	.uleb128 0x12
	.sleb128 -4
	.byte	0x11
	.uleb128 0x13
	.sleb128 -3
	.byte	0x11
	.uleb128 0x14
	.sleb128 -2
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -1
	.align	2
$LEFDE8:
$LSFDE10:
	.4byte	$LEFDE10-$LASFDE10
$LASFDE10:
	.4byte	$Lframe0
	.4byte	$LFB8
	.4byte	$LFE8-$LFB8
	.byte	0x4
	.4byte	$LCFI20-$LFB8
	.byte	0xe
	.uleb128 0x50
	.byte	0x4
	.4byte	$LCFI29-$LCFI20
	.byte	0x11
	.uleb128 0x10
	.sleb128 -10
	.byte	0x11
	.uleb128 0x11
	.sleb128 -9
	.byte	0x11
	.uleb128 0x12
	.sleb128 -8
	.byte	0x11
	.uleb128 0x13
	.sleb128 -7
	.byte	0x11
	.uleb128 0x14
	.sleb128 -6
	.byte	0x11
	.uleb128 0x15
	.sleb128 -5
	.byte	0x11
	.uleb128 0x16
	.sleb128 -4
	.byte	0x11
	.uleb128 0x17
	.sleb128 -3
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -2
	.align	2
$LEFDE10:
$LSFDE12:
	.4byte	$LEFDE12-$LASFDE12
$LASFDE12:
	.4byte	$Lframe0
	.4byte	$LFB9
	.4byte	$LFE9-$LFB9
	.byte	0x4
	.4byte	$LCFI30-$LFB9
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.4byte	$LCFI35-$LCFI30
	.byte	0x11
	.uleb128 0x10
	.sleb128 -6
	.byte	0x11
	.uleb128 0x11
	.sleb128 -5
	.byte	0x11
	.uleb128 0x12
	.sleb128 -4
	.byte	0x11
	.uleb128 0x13
	.sleb128 -3
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -2
	.align	2
$LEFDE12:
$LSFDE14:
	.4byte	$LEFDE14-$LASFDE14
$LASFDE14:
	.4byte	$Lframe0
	.4byte	$LFB10
	.4byte	$LFE10-$LFB10
	.byte	0x4
	.4byte	$LCFI36-$LFB10
	.byte	0xe
	.uleb128 0x48
	.byte	0x4
	.4byte	$LCFI46-$LCFI36
	.byte	0x11
	.uleb128 0x10
	.sleb128 -10
	.byte	0x11
	.uleb128 0x11
	.sleb128 -9
	.byte	0x11
	.uleb128 0x12
	.sleb128 -8
	.byte	0x11
	.uleb128 0x13
	.sleb128 -7
	.byte	0x11
	.uleb128 0x14
	.sleb128 -6
	.byte	0x11
	.uleb128 0x15
	.sleb128 -5
	.byte	0x11
	.uleb128 0x16
	.sleb128 -4
	.byte	0x11
	.uleb128 0x17
	.sleb128 -3
	.byte	0x11
	.uleb128 0x1e
	.sleb128 -2
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -1
	.align	2
$LEFDE14:
$LSFDE16:
	.4byte	$LEFDE16-$LASFDE16
$LASFDE16:
	.4byte	$Lframe0
	.4byte	$LFB11
	.4byte	$LFE11-$LFB11
	.byte	0x4
	.4byte	$LCFI47-$LFB11
	.byte	0xe
	.uleb128 0x40
	.byte	0x4
	.4byte	$LCFI50-$LCFI47
	.byte	0x11
	.uleb128 0x10
	.sleb128 -4
	.byte	0x11
	.uleb128 0x11
	.sleb128 -3
	.byte	0x11
	.uleb128 0x1f
	.sleb128 -2
	.align	2
$LEFDE16:
	.align	0
	.file 2 "/home/xieshijing/DIR819-96920/DIR819_1.05/DIR819/build.DIR-809/boot/build/include2/asm/types.h"
	.file 3 "/home/xieshijing/DIR819-96920/DIR819_1.05/DIR819/build.DIR-809/boot/tbsboot/include/types.h"
	.file 4 "/home/xieshijing/DIR819-96920/DIR819_1.05/DIR819/build.DIR-809/boot/tbsboot/include/flash.h"
	.file 5 "/home/xieshijing/DIR819-96920/DIR819_1.05/DIR819/build.DIR-809/boot/tbsboot/include/common.h"
	.file 6 "spi_flash.h"
	.text
$Letext0:
	.section	.debug_info
	.4byte	0x77c
	.2byte	0x2
	.4byte	$Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	$Ldebug_line0
	.4byte	$Letext0
	.4byte	$Ltext0
	.4byte	$LASF61
	.byte	0x1
	.4byte	$LASF62
	.4byte	$LASF63
	.uleb128 0x2
	.4byte	$LASF8
	.byte	0x5
	.byte	0x4
	.4byte	0x30
	.uleb128 0x3
	.4byte	$LASF0
	.byte	0x1
	.byte	0x8
	.uleb128 0x3
	.4byte	$LASF1
	.byte	0x4
	.byte	0x7
	.uleb128 0x3
	.4byte	$LASF2
	.byte	0x2
	.byte	0x7
	.uleb128 0x4
	.4byte	0x30
	.uleb128 0x3
	.4byte	$LASF3
	.byte	0x1
	.byte	0x6
	.uleb128 0x3
	.4byte	$LASF4
	.byte	0x2
	.byte	0x5
	.uleb128 0x5
	.ascii	"int\000"
	.byte	0x4
	.byte	0x5
	.uleb128 0x3
	.4byte	$LASF5
	.byte	0x4
	.byte	0x7
	.uleb128 0x3
	.4byte	$LASF6
	.byte	0x8
	.byte	0x5
	.uleb128 0x3
	.4byte	$LASF7
	.byte	0x8
	.byte	0x7
	.uleb128 0x6
	.ascii	"u8\000"
	.byte	0x2
	.byte	0x31
	.4byte	0x30
	.uleb128 0x6
	.ascii	"u32\000"
	.byte	0x2
	.byte	0x37
	.4byte	0x5f
	.uleb128 0x2
	.4byte	$LASF9
	.byte	0x3
	.byte	0x14
	.4byte	0x3e
	.uleb128 0x2
	.4byte	$LASF10
	.byte	0x3
	.byte	0x16
	.4byte	0x37
	.uleb128 0x2
	.4byte	$LASF11
	.byte	0x3
	.byte	0x36
	.4byte	0x58
	.uleb128 0x3
	.4byte	$LASF5
	.byte	0x4
	.byte	0x7
	.uleb128 0x7
	.4byte	0x102
	.2byte	0x530
	.byte	0x4
	.byte	0x32
	.uleb128 0x8
	.4byte	$LASF12
	.byte	0x4
	.byte	0x21
	.4byte	0x94
	.byte	0x2
	.byte	0x10
	.uleb128 0x0
	.uleb128 0x8
	.4byte	$LASF13
	.byte	0x4
	.byte	0x22
	.4byte	0x89
	.byte	0x2
	.byte	0x10
	.uleb128 0x4
	.uleb128 0x8
	.4byte	$LASF14
	.byte	0x4
	.byte	0x23
	.4byte	0x94
	.byte	0x2
	.byte	0x10
	.uleb128 0x8
	.uleb128 0x8
	.4byte	$LASF15
	.byte	0x4
	.byte	0x24
	.4byte	0x102
	.byte	0x2
	.byte	0x10
	.uleb128 0xc
	.uleb128 0x8
	.4byte	$LASF16
	.byte	0x4
	.byte	0x25
	.4byte	0x113
	.byte	0x3
	.byte	0x10
	.uleb128 0x428
	.byte	0x0
	.uleb128 0x9
	.4byte	0x113
	.4byte	0x94
	.uleb128 0xa
	.4byte	0xaa
	.2byte	0x106
	.byte	0x0
	.uleb128 0x9
	.4byte	0x124
	.4byte	0x25
	.uleb128 0xa
	.4byte	0xaa
	.2byte	0x106
	.byte	0x0
	.uleb128 0x2
	.4byte	$LASF17
	.byte	0x4
	.byte	0x32
	.4byte	0xb1
	.uleb128 0x3
	.4byte	$LASF18
	.byte	0x1
	.byte	0x6
	.uleb128 0xb
	.byte	0x4
	.4byte	0x30
	.uleb128 0xc
	.byte	0x4
	.uleb128 0xb
	.byte	0x4
	.4byte	0x12f
	.uleb128 0xd
	.4byte	0x1b2
	.4byte	$LASF64
	.byte	0x1c
	.byte	0x6
	.byte	0x3b
	.uleb128 0x8
	.4byte	$LASF19
	.byte	0x6
	.byte	0x3c
	.4byte	0x13e
	.byte	0x2
	.byte	0x10
	.uleb128 0x0
	.uleb128 0xe
	.ascii	"id\000"
	.byte	0x6
	.byte	0x3d
	.4byte	0x37
	.byte	0x2
	.byte	0x10
	.uleb128 0x4
	.uleb128 0x8
	.4byte	$LASF20
	.byte	0x6
	.byte	0x3e
	.4byte	0x37
	.byte	0x2
	.byte	0x10
	.uleb128 0x8
	.uleb128 0x8
	.4byte	$LASF21
	.byte	0x6
	.byte	0x3f
	.4byte	0x37
	.byte	0x2
	.byte	0x10
	.uleb128 0xc
	.uleb128 0x8
	.4byte	$LASF22
	.byte	0x6
	.byte	0x40
	.4byte	0x37
	.byte	0x2
	.byte	0x10
	.uleb128 0x10
	.uleb128 0x8
	.4byte	$LASF23
	.byte	0x6
	.byte	0x41
	.4byte	0x37
	.byte	0x2
	.byte	0x10
	.uleb128 0x14
	.uleb128 0x8
	.4byte	$LASF24
	.byte	0x6
	.byte	0x42
	.4byte	0x58
	.byte	0x2
	.byte	0x10
	.uleb128 0x18
	.byte	0x0
	.uleb128 0xf
	.4byte	0x299
	.4byte	$LASF30
	.byte	0x1
	.byte	0x6c
	.byte	0x1
	.4byte	0x58
	.4byte	$LFB3
	.4byte	$LFE3
	.4byte	$LSFDE0
	.byte	0x1
	.byte	0x6d
	.uleb128 0x10
	.ascii	"cmd\000"
	.byte	0x1
	.byte	0x6b
	.4byte	0x74
	.byte	0x1
	.byte	0x54
	.uleb128 0x11
	.4byte	$LASF25
	.byte	0x1
	.byte	0x6b
	.4byte	0x7e
	.byte	0x1
	.byte	0x55
	.uleb128 0x11
	.4byte	$LASF24
	.byte	0x1
	.byte	0x6b
	.4byte	0x74
	.byte	0x1
	.byte	0x56
	.uleb128 0x10
	.ascii	"buf\000"
	.byte	0x1
	.byte	0x6b
	.4byte	0x299
	.byte	0x1
	.byte	0x57
	.uleb128 0x10
	.ascii	"len\000"
	.byte	0x1
	.byte	0x6b
	.4byte	0x9f
	.byte	0x1
	.byte	0x5c
	.uleb128 0x11
	.4byte	$LASF26
	.byte	0x1
	.byte	0x6b
	.4byte	0x29f
	.byte	0x1
	.byte	0x52
	.uleb128 0x11
	.4byte	$LASF27
	.byte	0x1
	.byte	0x6b
	.4byte	0x2a4
	.byte	0x1
	.byte	0x5e
	.uleb128 0x12
	.ascii	"reg\000"
	.byte	0x1
	.byte	0x6d
	.4byte	0x7e
	.byte	0x1
	.byte	0x5b
	.uleb128 0x13
	.4byte	$LASF28
	.byte	0x1
	.byte	0x6d
	.4byte	0x7e
	.byte	0x1
	.byte	0x5a
	.uleb128 0x13
	.4byte	$LASF29
	.byte	0x1
	.byte	0x6e
	.4byte	0x58
	.byte	0x1
	.byte	0x56
	.uleb128 0x14
	.4byte	0x276
	.4byte	$LBB2
	.4byte	$LBE2
	.uleb128 0x15
	.ascii	"__x\000"
	.byte	0x1
	.byte	0x94
	.4byte	0x58
	.uleb128 0x15
	.ascii	"__y\000"
	.byte	0x1
	.byte	0x94
	.4byte	0x58
	.byte	0x0
	.uleb128 0x16
	.4byte	0x2a9
	.4byte	$LBB3
	.4byte	$LBE3
	.uleb128 0x17
	.4byte	0x2ba
	.uleb128 0x18
	.4byte	$LBB4
	.4byte	$LBE4
	.uleb128 0x17
	.4byte	0x2ba
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0xb
	.byte	0x4
	.4byte	0x74
	.uleb128 0x19
	.4byte	0x7e
	.uleb128 0x19
	.4byte	0x58
	.uleb128 0x1a
	.4byte	0x2d0
	.4byte	$LASF31
	.byte	0x1
	.byte	0x60
	.byte	0x1
	.4byte	0x58
	.byte	0x1
	.uleb128 0x1b
	.4byte	$LASF32
	.byte	0x1
	.byte	0x61
	.4byte	0x5f
	.uleb128 0x1c
	.4byte	$LASF33
	.4byte	0x2e5
	.byte	0x1
	.byte	0x0
	.uleb128 0x9
	.4byte	0x2e0
	.4byte	0x2e0
	.uleb128 0x1d
	.4byte	0xaa
	.byte	0xe
	.byte	0x0
	.uleb128 0x19
	.4byte	0x12f
	.uleb128 0x19
	.4byte	0x2d0
	.uleb128 0xf
	.4byte	0x340
	.4byte	$LASF34
	.byte	0x1
	.byte	0xab
	.byte	0x1
	.4byte	0x58
	.4byte	$LFB4
	.4byte	$LFE4
	.4byte	$LSFDE2
	.byte	0x1
	.byte	0x6d
	.uleb128 0x11
	.4byte	$LASF35
	.byte	0x1
	.byte	0xaa
	.4byte	0x58
	.byte	0x1
	.byte	0x60
	.uleb128 0x13
	.4byte	$LASF28
	.byte	0x1
	.byte	0xac
	.4byte	0x58
	.byte	0x1
	.byte	0x61
	.uleb128 0x12
	.ascii	"sr\000"
	.byte	0x1
	.byte	0xad
	.4byte	0x45
	.byte	0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x1e
	.4byte	$LASF33
	.4byte	0x350
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.4byte	__func__.1
	.byte	0x0
	.uleb128 0x9
	.4byte	0x350
	.4byte	0x2e0
	.uleb128 0x1d
	.4byte	0xaa
	.byte	0x10
	.byte	0x0
	.uleb128 0x19
	.4byte	0x340
	.uleb128 0x1f
	.4byte	0x398
	.byte	0x1
	.4byte	$LASF37
	.byte	0x1
	.byte	0xbb
	.byte	0x1
	.4byte	0x398
	.4byte	$LFB5
	.4byte	$LFE5
	.4byte	$LSFDE4
	.byte	0x1
	.byte	0x6d
	.uleb128 0x11
	.4byte	$LASF25
	.byte	0x1
	.byte	0xba
	.4byte	0x94
	.byte	0x1
	.byte	0x54
	.uleb128 0x13
	.4byte	$LASF36
	.byte	0x1
	.byte	0xbc
	.4byte	0x398
	.byte	0x1
	.byte	0x55
	.uleb128 0x15
	.ascii	"i\000"
	.byte	0x1
	.byte	0xbd
	.4byte	0x58
	.byte	0x0
	.uleb128 0xb
	.byte	0x4
	.4byte	0x124
	.uleb128 0x20
	.4byte	0x3d2
	.byte	0x1
	.4byte	$LASF38
	.byte	0x1
	.byte	0xd0
	.byte	0x1
	.4byte	$LFB6
	.4byte	$LFE6
	.4byte	$LSFDE6
	.byte	0x1
	.byte	0x6d
	.uleb128 0x11
	.4byte	$LASF36
	.byte	0x1
	.byte	0xcf
	.4byte	0x398
	.byte	0x1
	.byte	0x63
	.uleb128 0x12
	.ascii	"i\000"
	.byte	0x1
	.byte	0xd1
	.4byte	0x58
	.byte	0x1
	.byte	0x60
	.byte	0x0
	.uleb128 0x1f
	.4byte	0x45b
	.byte	0x1
	.4byte	$LASF39
	.byte	0x1
	.byte	0xe0
	.byte	0x1
	.4byte	0x58
	.4byte	$LFB7
	.4byte	$LFE7
	.4byte	$LSFDE8
	.byte	0x1
	.byte	0x6d
	.uleb128 0x11
	.4byte	$LASF36
	.byte	0x1
	.byte	0xdf
	.4byte	0x398
	.byte	0x1
	.byte	0x54
	.uleb128 0x11
	.4byte	$LASF40
	.byte	0x1
	.byte	0xdf
	.4byte	0x58
	.byte	0x1
	.byte	0x55
	.uleb128 0x11
	.4byte	$LASF41
	.byte	0x1
	.byte	0xdf
	.4byte	0x58
	.byte	0x1
	.byte	0x56
	.uleb128 0x13
	.4byte	$LASF12
	.byte	0x1
	.byte	0xe1
	.4byte	0x9f
	.byte	0x1
	.byte	0x60
	.uleb128 0x12
	.ascii	"len\000"
	.byte	0x1
	.byte	0xe2
	.4byte	0x9f
	.byte	0x1
	.byte	0x62
	.uleb128 0x13
	.4byte	$LASF25
	.byte	0x1
	.byte	0xe3
	.4byte	0x5f
	.byte	0x1
	.byte	0x64
	.uleb128 0x1e
	.4byte	$LASF33
	.4byte	0x46b
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.4byte	__func__.3
	.uleb128 0x21
	.ascii	"out\000"
	.byte	0x1
	.byte	0xf9
	.4byte	$L96
	.byte	0x0
	.uleb128 0x9
	.4byte	0x46b
	.4byte	0x2e0
	.uleb128 0x1d
	.4byte	0xaa
	.byte	0xb
	.byte	0x0
	.uleb128 0x19
	.4byte	0x45b
	.uleb128 0x22
	.4byte	0x50a
	.byte	0x1
	.4byte	$LASF42
	.byte	0x1
	.2byte	0x100
	.byte	0x1
	.4byte	0x58
	.4byte	$LFB8
	.4byte	$LFE8
	.4byte	$LSFDE10
	.byte	0x1
	.byte	0x6d
	.uleb128 0x10
	.ascii	"buf\000"
	.byte	0x1
	.byte	0xff
	.4byte	0x136
	.byte	0x1
	.byte	0x67
	.uleb128 0x10
	.ascii	"to\000"
	.byte	0x1
	.byte	0xff
	.4byte	0x5f
	.byte	0x1
	.byte	0x64
	.uleb128 0x10
	.ascii	"len\000"
	.byte	0x1
	.byte	0xff
	.4byte	0x9f
	.byte	0x1
	.byte	0x63
	.uleb128 0x23
	.4byte	$LASF43
	.byte	0x1
	.2byte	0x101
	.4byte	0x7e
	.byte	0x1
	.byte	0x55
	.uleb128 0x23
	.4byte	$LASF23
	.byte	0x1
	.2byte	0x101
	.4byte	0x7e
	.byte	0x1
	.byte	0x61
	.uleb128 0x24
	.ascii	"rc\000"
	.byte	0x1
	.2byte	0x102
	.4byte	0x58
	.byte	0x1
	.byte	0x60
	.uleb128 0x23
	.4byte	$LASF44
	.byte	0x1
	.2byte	0x103
	.4byte	0x9f
	.byte	0x1
	.byte	0x62
	.uleb128 0x25
	.ascii	"out\000"
	.byte	0x1
	.2byte	0x125
	.4byte	$L103
	.uleb128 0x1e
	.4byte	$LASF33
	.4byte	0x50a
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.4byte	__func__.2
	.byte	0x0
	.uleb128 0x19
	.4byte	0x2d0
	.uleb128 0x22
	.4byte	0x590
	.byte	0x1
	.4byte	$LASF45
	.byte	0x1
	.2byte	0x12a
	.byte	0x1
	.4byte	0x58
	.4byte	$LFB9
	.4byte	$LFE9
	.4byte	$LSFDE12
	.byte	0x1
	.byte	0x6d
	.uleb128 0x26
	.4byte	$LASF36
	.byte	0x1
	.2byte	0x129
	.4byte	0x398
	.byte	0x1
	.byte	0x54
	.uleb128 0x26
	.4byte	$LASF25
	.byte	0x1
	.2byte	0x129
	.4byte	0x13c
	.byte	0x1
	.byte	0x55
	.uleb128 0x27
	.ascii	"buf\000"
	.byte	0x1
	.2byte	0x129
	.4byte	0x590
	.byte	0x1
	.byte	0x63
	.uleb128 0x27
	.ascii	"len\000"
	.byte	0x1
	.2byte	0x129
	.4byte	0x58
	.byte	0x1
	.byte	0x62
	.uleb128 0x23
	.4byte	$LASF44
	.byte	0x1
	.2byte	0x12b
	.4byte	0x58
	.byte	0x1
	.byte	0x61
	.uleb128 0x23
	.4byte	$LASF46
	.byte	0x1
	.2byte	0x12c
	.4byte	0x5f
	.byte	0x1
	.byte	0x60
	.uleb128 0x25
	.ascii	"out\000"
	.byte	0x1
	.2byte	0x137
	.4byte	$L117
	.byte	0x0
	.uleb128 0xb
	.byte	0x4
	.4byte	0x136
	.uleb128 0x22
	.4byte	0x6bf
	.byte	0x1
	.4byte	$LASF47
	.byte	0x1
	.2byte	0x141
	.byte	0x1
	.4byte	0x58
	.4byte	$LFB10
	.4byte	$LFE10
	.4byte	$LSFDE14
	.byte	0x1
	.byte	0x6d
	.uleb128 0x27
	.ascii	"src\000"
	.byte	0x1
	.2byte	0x140
	.4byte	0x13e
	.byte	0x1
	.byte	0x64
	.uleb128 0x26
	.4byte	$LASF25
	.byte	0x1
	.2byte	0x140
	.4byte	0x94
	.byte	0x1
	.byte	0x62
	.uleb128 0x27
	.ascii	"cnt\000"
	.byte	0x1
	.2byte	0x140
	.4byte	0x94
	.byte	0x1
	.byte	0x65
	.uleb128 0x24
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x142
	.4byte	0x58
	.byte	0x1
	.byte	0x56
	.uleb128 0x28
	.4byte	$LASF44
	.byte	0x1
	.2byte	0x143
	.4byte	0x37
	.uleb128 0x24
	.ascii	"end\000"
	.byte	0x1
	.2byte	0x144
	.4byte	0x94
	.byte	0x1
	.byte	0x60
	.uleb128 0x23
	.4byte	$LASF48
	.byte	0x1
	.2byte	0x145
	.4byte	0x398
	.byte	0x1
	.byte	0x66
	.uleb128 0x23
	.4byte	$LASF49
	.byte	0x1
	.2byte	0x146
	.4byte	0x398
	.byte	0x1
	.byte	0x67
	.uleb128 0x23
	.4byte	$LASF36
	.byte	0x1
	.2byte	0x147
	.4byte	0x398
	.byte	0x1
	.byte	0x61
	.uleb128 0x24
	.ascii	"len\000"
	.byte	0x1
	.2byte	0x148
	.4byte	0x94
	.byte	0x1
	.byte	0x60
	.uleb128 0x23
	.4byte	$LASF50
	.byte	0x1
	.2byte	0x149
	.4byte	0x94
	.byte	0x1
	.byte	0x54
	.uleb128 0x23
	.4byte	$LASF51
	.byte	0x1
	.2byte	0x14a
	.4byte	0x51
	.byte	0x1
	.byte	0x58
	.uleb128 0x23
	.4byte	$LASF52
	.byte	0x1
	.2byte	0x14b
	.4byte	0x94
	.byte	0x1
	.byte	0x55
	.uleb128 0x18
	.4byte	$LBB5
	.4byte	$LBE5
	.uleb128 0x24
	.ascii	"p\000"
	.byte	0x1
	.2byte	0x16e
	.4byte	0x136
	.byte	0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x24
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x16f
	.4byte	0x5f
	.byte	0x1
	.byte	0x63
	.uleb128 0x29
	.ascii	"j\000"
	.byte	0x1
	.2byte	0x16f
	.4byte	0x5f
	.uleb128 0x29
	.ascii	"tmp\000"
	.byte	0x1
	.2byte	0x16f
	.4byte	0x5f
	.uleb128 0x23
	.4byte	$LASF53
	.byte	0x1
	.2byte	0x16f
	.4byte	0x5f
	.byte	0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x23
	.4byte	$LASF54
	.byte	0x1
	.2byte	0x16f
	.4byte	0x5f
	.byte	0x1
	.byte	0x6e
	.byte	0x0
	.byte	0x0
	.uleb128 0x22
	.4byte	0x6fb
	.byte	0x1
	.4byte	$LASF55
	.byte	0x1
	.2byte	0x19a
	.byte	0x1
	.4byte	0x37
	.4byte	$LFB11
	.4byte	$LFE11
	.4byte	$LSFDE16
	.byte	0x1
	.byte	0x6d
	.uleb128 0x24
	.ascii	"i\000"
	.byte	0x1
	.2byte	0x19b
	.4byte	0x58
	.byte	0x1
	.byte	0x53
	.uleb128 0x23
	.4byte	$LASF56
	.byte	0x1
	.2byte	0x19c
	.4byte	0x5f
	.byte	0x2
	.byte	0x91
	.sleb128 40
	.byte	0x0
	.uleb128 0x2a
	.4byte	$LASF36
	.byte	0x1
	.byte	0x8
	.4byte	0x398
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.4byte	info
	.uleb128 0x9
	.4byte	0x71d
	.4byte	0x71d
	.uleb128 0x1d
	.4byte	0xaa
	.byte	0x32
	.byte	0x0
	.uleb128 0x19
	.4byte	0x144
	.uleb128 0x2a
	.4byte	$LASF57
	.byte	0x6
	.byte	0x45
	.4byte	0x734
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.4byte	flash_table
	.uleb128 0x19
	.4byte	0x70d
	.uleb128 0x9
	.4byte	0x749
	.4byte	0x124
	.uleb128 0x1d
	.4byte	0xaa
	.byte	0x0
	.byte	0x0
	.uleb128 0x2a
	.4byte	$LASF58
	.byte	0x1
	.byte	0x7
	.4byte	0x739
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.4byte	flash_info
	.uleb128 0x13
	.4byte	$LASF59
	.byte	0x1
	.byte	0x9
	.4byte	0x76c
	.byte	0x5
	.byte	0x3
	.4byte	spi_dev
	.uleb128 0xb
	.byte	0x4
	.4byte	0x144
	.uleb128 0x2b
	.4byte	$LASF60
	.byte	0x1
	.byte	0x5c
	.4byte	0x37
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.section	.debug_abbrev
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x10
	.uleb128 0x6
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.byte	0x0
	.byte	0x0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x4
	.uleb128 0x35
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x5
	.uleb128 0x24
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x6
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x9
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xa
	.uleb128 0x21
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0xb
	.uleb128 0xf
	.byte	0x0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xc
	.uleb128 0xf
	.byte	0x0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0xe
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x2001
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x11
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x12
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x13
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x14
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x16
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x17
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x31
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x18
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x19
	.uleb128 0x26
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x1b
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x1c
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x1d
	.uleb128 0x21
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x1e
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x1f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x2001
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x20
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x2001
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x21
	.uleb128 0xa
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x2001
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x23
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x24
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x25
	.uleb128 0xa
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x26
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x27
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x28
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x29
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x2a
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.section	.debug_pubnames,"",@progbits
	.4byte	0xae
	.2byte	0x2
	.4byte	$Ldebug_info0
	.4byte	0x780
	.4byte	0x355
	.ascii	"addr2info\000"
	.4byte	0x39e
	.ascii	"flash_print_info\000"
	.4byte	0x3d2
	.ascii	"flash_erase\000"
	.4byte	0x470
	.ascii	"spiflash_write\000"
	.4byte	0x50f
	.ascii	"flash_read_buf\000"
	.4byte	0x596
	.ascii	"flash_write\000"
	.4byte	0x6bf
	.ascii	"flash_init\000"
	.4byte	0x6fb
	.ascii	"info\000"
	.4byte	0x722
	.ascii	"flash_table\000"
	.4byte	0x749
	.ascii	"flash_info\000"
	.4byte	0x0
	.section	.debug_aranges,"",@progbits
	.4byte	0x1c
	.2byte	0x2
	.4byte	$Ldebug_info0
	.byte	0x4
	.byte	0x0
	.2byte	0x0
	.2byte	0x0
	.4byte	$Ltext0
	.4byte	$Letext0-$Ltext0
	.4byte	0x0
	.4byte	0x0
	.section	.debug_str,"MS",@progbits,1
$LASF14:
	.ascii	"flash_id\000"
$LASF40:
	.ascii	"s_first\000"
$LASF46:
	.ascii	"from\000"
$LASF18:
	.ascii	"char\000"
$LASF56:
	.ascii	"temp\000"
$LASF42:
	.ascii	"spiflash_write\000"
$LASF59:
	.ascii	"spi_dev\000"
$LASF48:
	.ascii	"info_first\000"
$LASF4:
	.ascii	"short int\000"
$LASF24:
	.ascii	"mode\000"
$LASF21:
	.ascii	"erasesize\000"
$LASF49:
	.ascii	"info_last\000"
$LASF60:
	.ascii	"mips_bus_feq\000"
$LASF28:
	.ascii	"count\000"
$LASF7:
	.ascii	"long long unsigned int\000"
$LASF64:
	.ascii	"spi_flash_params\000"
$LASF53:
	.ascii	"addr_tmp\000"
$LASF26:
	.ascii	"user\000"
$LASF41:
	.ascii	"s_last\000"
$LASF11:
	.ascii	"size_t\000"
$LASF61:
	.ascii	"GNU C 3.4.2 -g\000"
$LASF54:
	.ascii	"src_tmp\000"
$LASF62:
	.ascii	"spi_flash.c\000"
$LASF13:
	.ascii	"sector_count\000"
$LASF17:
	.ascii	"flash_info_t\000"
$LASF35:
	.ascii	"timeout\000"
$LASF52:
	.ascii	"e_addr\000"
$LASF29:
	.ascii	"retval\000"
$LASF6:
	.ascii	"long long int\000"
$LASF20:
	.ascii	"chip_size\000"
$LASF32:
	.ascii	"spi_wait_nsec\000"
$LASF43:
	.ascii	"page_offset\000"
$LASF12:
	.ascii	"size\000"
$LASF30:
	.ascii	"raspi_cmd\000"
$LASF37:
	.ascii	"addr2info\000"
$LASF8:
	.ascii	"uchar\000"
$LASF58:
	.ascii	"flash_info\000"
$LASF63:
	.ascii	"/home/xieshijing/DIR819-96920/DIR819_1.05/DIR819/build.D"
	.ascii	"IR-809/boot/tbsboot/cpu/mt7620a\000"
$LASF47:
	.ascii	"flash_write\000"
$LASF27:
	.ascii	"flag\000"
$LASF10:
	.ascii	"ulong\000"
$LASF25:
	.ascii	"addr\000"
$LASF19:
	.ascii	"name\000"
$LASF15:
	.ascii	"start\000"
$LASF5:
	.ascii	"unsigned int\000"
$LASF50:
	.ascii	"b_end\000"
$LASF44:
	.ascii	"retlen\000"
$LASF39:
	.ascii	"flash_erase\000"
$LASF1:
	.ascii	"long unsigned int\000"
$LASF55:
	.ascii	"flash_init\000"
$LASF22:
	.ascii	"nr_units\000"
$LASF16:
	.ascii	"protect\000"
$LASF0:
	.ascii	"unsigned char\000"
$LASF9:
	.ascii	"ushort\000"
$LASF31:
	.ascii	"spic_busy_wait\000"
$LASF36:
	.ascii	"info\000"
$LASF3:
	.ascii	"signed char\000"
$LASF2:
	.ascii	"short unsigned int\000"
$LASF33:
	.ascii	"__func__\000"
$LASF45:
	.ascii	"flash_read_buf\000"
$LASF51:
	.ascii	"s_end\000"
$LASF57:
	.ascii	"flash_table\000"
$LASF38:
	.ascii	"flash_print_info\000"
$LASF23:
	.ascii	"page_size\000"
$LASF34:
	.ascii	"raspi_wait_ready\000"
	.ident	"GCC: (GNU) 3.4.2"
